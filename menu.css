

.header nav ul{
    display: flex;
}
.header nav ul li a{
    font-size: 2rem;
    font-weight: 500;
    padding: 10px 30px;
    border-radius: 50px;
    transition: 0.3s;
}
/* Novamente a:hover é para quando o mouse passar em cima do meu "a" */
.header nav ul li a:hover{
    color: #ffffff;
    background-color: coral;
}
.header .menu{
    display: none;
    width: 60px;
    height: 60px;
    /* Para que fique responsivo o site é necessário definir que menu esteja posicionado sempre
    ao final da linha portanto align-self:flex-end isto funciona pois o container esta com um
    display:flex; logo todos os elementos dentro deste se tornam flex-itens por isso a propriedade
    funciona*/
    align-self:flex-end;
}
/* como o menu acima esta dentro da nossa label eu preciso definir a mesma como um display:flex 
para que la eu possa tornar os elementos flex-itens e consiga utilizar a propriedade 
align-self:flex-end; e como o intuito é definir o objeto sempre a direita e nao abaixo 
devemos definir a flex-direction: column pois por padrao flex a mesma é row */
.header nav label{
    display: flex;
    flex-direction: column;
}
.header .hamburguer{
    background-color: #000;
    /* O position relative é porque eu programei um before e um after e estes estarão em position
    absolute em relação ao <span class="hamburguer"> que no caso é o traço ao meio do meu hamburguer
    por isso a altura é de somente 2px e a largura de 30px e no mesmo sera aplicado um transition
    de 0.5s ease-in-out que basicamente é a animação que ocorrera ao clicar*/
    position: relative;
    display: block;
    width: 30px;
    height: 2px;
    top: 29px;
    left: 15px;
    transition: 0.5s ease-in-out;
}
/* Basicamente o display block da tag acima é para que tanto o before quanto o after estejam 
posicionados acima e abaixo do meu <span class="hamburguer">  */
.header .hamburguer:before, .header .hamburguer:after{
    background-color: #000;
    /* Basicamente o content padrao de ser usado no before e no after o display:block; é 
    para justamente que ambos fiquem acima e abaixo corretamente do span o width/height: 100%;
    serve para que sempre fiquem do mesmo tamanho do .hamburguer que foi definido acima
    (<span class="hamburguer") e o position absolute para que ambos sempre estejam posicionados
    acima e abaixo do hamburguer e o transition é para que eles acompanhem a transição do
    hamburguer */
    content: "";
    display: block;
    width: 100%;
    height: 100%;
    position: absolute;
    transition: 0.3s ease-in-out;
}
/* Basicamente quero posicionar o before acima do span */
.header .hamburguer:before{
    top: -10px;
}
/* Aqui posiciono abaixo do span */
.header .hamburguer:after{
    bottom: -10px;
}
/* Basicamente como o input é um checkbox a caixinha que serve para que marquemos fica visivel
ao utilizar o display:none estamos ocultando a mesma*/
.header input{
    display: none;
}
/* Com tudo pronto eu preciso agora tornar o meu input clicavel e animado basta utilizar o
seguinte comando .header input:checked ~ label .hamburguer <-(Basicamente isto quer dizer)
quando meu input estiver sendo clicado o meu label deve realizar a seguinte ação 
transform: rotate(45deg) deve rotacionar 45º*/
.header input:checked ~ label .hamburguer{
    transform: rotate(45deg);
}
/* Agora basicamente sera indicado funções para o before que basicamente como o meu span
rotaciona 45 graus ele fica em posição para formarmos um X e aproveitando o before para
colocar a segunda perna do X eu coloco uma rotação de 90 graus e defino o top:0 indicando
que o mesmo fique no mesmo local do span*/
.header input:checked ~ label .hamburguer:before{
    transform: rotate(90deg);
    top: 0;
}
/* Basicamente sera o mesmo comando do acima, no entanto como o mesmo esta posicionado abaixo
eu coloco o botton: 0; dando um afeito de animação interessante, tendo em vista que o X 
sempre indica para fecharmos uma aba, que no caso o mesmo sera utilizado para retornarmos
o menu hamburguer*/
.header input:checked ~ label .hamburguer:after{
    transform: rotate(90deg);
    bottom: 0;
}
/* Basicamente o display do site esta definido como flex, ao definir o media querie se eu mudar
para display:block toda a programação envolvida nesta aba aparecerá pois o display da tag sera
display:block no entanto os elementos da nav ul {} continuarao aparecendo por isso é necessario
colocar display:none para que estes no responsivo tornem se ocultos */
@media(max-width: 900px){
    .header .menu{
        display: block;
    }
    .header nav ul{
        display: none;
    }
    /* Para que o menu apareça novamente ao clicar no input devemos programa-lo no media querie
    porque somente neste momento que o mesmo sera utilizado, para fazer isto tenho que dizer
    .header input:checked ~ ul{} <-(Basicamente isto quer dizer dentro da tag header quando o
    input estiver checado/clicado minha ul(lista) devera executar aseguinte ação) ai o comando
    que a ul esta é display: none e deveremos altera-lo para block para que assim ela apareça
    e fique abaixo do imput */
    .header input:checked ~ ul{
        display: block;

    }
    /* Agora basicamente so estilizar como o menu devera aparecer quando o mesmo estiver no display
    block onde basicamente estaremos definindo o position absolute, para que o mesmo fique a frente
    de qualquer outro elemento no site um top:8px para que tenha um distanciamento de todos
    um right:0 para que o elemento sempre fique colado a direita e um z-index: 1; pois os elementos
    como são clicaveis devem estar a frente de outros como se tivessem saindo da tela do computador
    fazendo com que ao clicar neles não tenha problemas caso exista algum botao clicavel no mesmo 
    lugar */
    .header nav{
        position: absolute;
        top: 8px;
        right: 20px;
        z-index: 1;
    }
    /* Como na tag acima eu somente estilizei a navegação iremos estilizar agr o tamanho
    a cor de fundo e o espaçamento dos "botões" */
    .header nav ul{
        width: 200px;
        background-color: #fff;
        padding: 20px;
    }
    /* Agora estamos estilizando os links a onde iremos centralizar os textos e colocarmos o
    display-block pois o mesmo nao foi definido na tag ainda */
    .header nav ul a{
        text-align: center;
        padding: 20px;
        display: block;
    }
}